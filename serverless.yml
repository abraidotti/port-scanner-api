service: port-scanner-api

plugins:
  - serverless-python-requirements

custom:
  myStage: ${opt:stage, self:provider.stage}
  tableNamePrefix: "port-scanner-api-${self:custom.myStage}"

package:
  exclude:
    - node_modules/**
    - .idea/**
    - .requirements/**
    - env/**
    - README.md
    - package.json
    - package-lock.json
    - requirements.txt

provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  apiKeys:
    - PORT-SCANNER-API-KEY
  environment:
    TABLE_PREFIX: ${self:custom.tableNamePrefix}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: scans/create.create
    events:
      - http:
          path: scans
          method: post
          cors: true

  list:
    handler: scans/list.scan_list
    events:
      - http:
          path: scans
          method: get
          cors: true

  get:
    handler: scans/get.get
    events:
      - http:
          path: scans/{scan_id}
          method: get
          cors: true
          integration: lambda
          request:
            paths:
              scan_id: true

  update:
    handler: scans/update.update
    events:
      - http:
          path: scans/{scan_id}
          method: put
          cors: true
          integration: lambda
          request:
            paths:
              scan_id: true
  delete:
    handler: scans/delete.delete
    events:
      - http:
          path: scans/{scan_id}
          method: delete
          cors: true
          integration: lambda
          request:
            paths:
              scan_id: true

resources:
  Resources:
    scansDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.tableNamePrefix}-scans
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: scan_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: scan_id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
